.INCLUDE "m16def.inc"   ; δήλωση του μικροελεγκτή
.DEF reg = R16   
.DEF temp = R17  
main:
    clr reg
    out DDRB,reg    ; ορισμός DDRB ως θύρα εισόδου
    ser reg
    out DDRD,reg    ; ορισμός DDRD ως θύρα εξόδου
    out PORTD,reg   ; τίθενται οι αντιστάσεις πρόσδεσης pull-up
    clr reg          
    out PORTD,reg   ; ανάβουμε τα leds (ανάστροφη λογική) 
loop: 
    sbis PINB,4     ; αν δεν έχει πατηθεί ο sw4 προσπερνάνε την επομενη εντολή
    rjmp sw4        ; αν έχει πατηθεί πηγαίνουμε στο sw4 (προτεραιότητα από sw4 προς sw0)
    sbis PINB,3     ; αν δεν έχει πατηθεί ο sw3 προσπερνάνε την επομενη εντολή
    rjmp sw3        ; αν έχει πατηθεί πηγαίνουμε στο sw3
    sbis PINB,2     ; αν δεν έχει πατηθεί ο sw2 προσπερνάνε την επομενη εντολή
	rjmp sw2        ; αν έχει πατηθεί πηγαίνουμε στο sw2
	sbis PINB,1     ; αν δεν έχει πατηθεί ο sw1 προσπερνάνε την επομενη εντολή
	rjmp sw1        ; αν έχει πατηθεί πηγαίνουμε στο sw1
	sbis PINB,0     ; αν δεν έχει πατηθεί ο sw0 προσπερνάνε την επομενη εντολή και γυρνάμε πίσω στο loop
	rjmp sw0        ; αν έχει πατηθεί πηγαίνουμε στο sw0
	rjmp loop
sw4:
	ldi reg,0xFF    ; σβήσιμο όλων των led (ανάστροφη λογική)
	out PORTD,reg
    sbic PINB,4     ; μέχρι να επανέλθει ο αντίστοιχος διακόπτης συνεχίζουμε στο sw4
	rjmp loop       ; αλλιώς επιστρέφουμε στο loop
	rjmp sw4   
sw3:
    mov temp,reg    ; αποθήκευση της προηγούμενης κατάστασης για αν επιστρέψουμε σε αυτή όταν
	ldi reg,0xFF    ; επανέλθει ο διακόπτης
    CLc             ; μηδενισμός κρατούμενου έτσι ώστε μετά το shift να ανάψει πρώτο το led που αντιστοιχέι στο LSB
loop_sw3: 
    rol reg         ; κάνουμε shift αριστερά και εμφανίζουμε
	out PORTD,reg   
	//call Delay500 ; καθυστέρηση για 0.5 sec
    sbic PINB,3     ; μέχρι να επανέλθει ο αντίστοιχος διακόπτης συνεχίζουμε στο lopp_sw3
	rjmp sw3_end    ; αλλιώς πηγαίνουμε στο sw3_end
	rjmp loop_sw3
sw3_end:
    mov reg,temp
    out PORTD,temp  ; επαναφορά στην τελευταία κατάσταση των leds πριν πατηθεί ο διακόπτης
    rjmp loop       ; και επιστροφή στην αρχή

sw2:
    mov temp,reg    ; αποθήκευση της προηγούμενης κατάστασης για αν επιστρέψουμε σε αυτή όταν	
    ldi reg,0xFE    ; επανέλθει ο διακόπτης
    SEc             ; κάνουμε το κρατούμενο 1 έτσι να λειτουργήσει σωστά το shift στη συνέχεια
loop_sw2: 
	out PORTD,reg   ; εμφανίζουμε πρώτα και μετά κάνουμε shift
	//call Delay500 ; καθυστέρηση για 0.5 sec
	ror reg
	sbic PINB,2     ; μέχρι να επανέλθει ο αντίστοιχος διακόπτης συνεχίζουμε στο lopp_sw2
	rjmp sw2_end    ; αλλιώς πηγαίνουμε στο sw2_end
	rjmp loop_sw2
sw2_end:
    mov reg,temp
    out PORTD,temp  ; επαναφορά στην τελευταία κατάσταση των leds πριν πατηθεί ο διακόπτης
    rjmp loop       ; και επιστροφή στην αρχή
    
sw1:	
	ldi reg,0x0F    ; ανάβουμε τα led4-7 και σβήνουμε τα led0-3 (αρνητική λογική)
	out PORTD,reg
	sbic PINB,1     ; μέχρι να επανέλθει ο αντίστοιχος διακόπτης συνεχίζουμε στο sw1
	rjmp loop       ; αλλιώς επιστρέφουμε στο loop
	rjmp sw1

sw0:	
	ldi reg,0xF0    ; ανάβουμε τα led0-3 και σβήνουμε τα led4-7 (αρνητική λογική)
	out PORTD,reg
	sbic PINB,0     ; μέχρι να επανέλθει ο αντίστοιχος διακόπτης συνεχίζουμε στο sw1
	rjmp loop       ; αλλιώς επιστρέφουμε στο loop
	rjmp sw0
